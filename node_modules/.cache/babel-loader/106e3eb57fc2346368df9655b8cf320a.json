{"ast":null,"code":"var _jsxFileName = \"/Users/argzon/Downloads/chartjs-react-tutorial-main/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport BarChart from \"./components/BarChart\";\nimport LineChart from \"./components/LineChart\";\nimport PieChart from \"./components/PieChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [userData, setUserData] = useState({\n    labels: [],\n    datasets: [{\n      label: \"Users Gained\",\n      data: [],\n      backgroundColor: [\"rgba(75,192,192,1)\", \"#ecf0f1\", \"#50AF95\", \"#f3ba2f\", \"#2a71d0\"],\n      borderColor: \"black\",\n      borderWidth: 2\n    }]\n  });\n\n  const handleLabelInput = event => {\n    const labels = event.target.value.split(\",\").map(label => label.trim());\n    setUserData(prevData => ({ ...prevData,\n      labels: labels\n    }));\n  };\n\n  const handleDataInput = event => {\n    const data = event.target.value.split(\",\").map(value => Number(value.trim()));\n    setUserData(prevData => ({ ...prevData,\n      datasets: [{ ...prevData.datasets[0],\n        data: data\n      }]\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"labelInput\",\n        children: \"Enter Labels (comma-separated): \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"labelInput\",\n        placeholder: \"Label1, Label2, Label3, ...\",\n        onChange: handleLabelInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"dataInput\",\n        children: \"Enter Data Points (comma-separated): \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"dataInput\",\n        placeholder: \"Value1, Value2, Value3, ...\",\n        onChange: handleDataInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 700\n      },\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        chartData: userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 700\n      },\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        chartData: userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 700\n      },\n      children: /*#__PURE__*/_jsxDEV(PieChart, {\n        chartData: userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gb/BG/4Xi0yK4iQ6rkmnbr3pLV4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/argzon/Downloads/chartjs-react-tutorial-main/src/App.js"],"names":["useState","BarChart","LineChart","PieChart","App","userData","setUserData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","handleLabelInput","event","target","value","split","map","trim","prevData","handleDataInput","Number","width"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport BarChart from \"./components/BarChart\";\nimport LineChart from \"./components/LineChart\";\nimport PieChart from \"./components/PieChart\";\n\nfunction App() {\n  const [userData, setUserData] = useState({\n    labels: [],\n    datasets: [\n      {\n        label: \"Users Gained\",\n        data: [],\n        backgroundColor: [\n          \"rgba(75,192,192,1)\",\n          \"#ecf0f1\",\n          \"#50AF95\",\n          \"#f3ba2f\",\n          \"#2a71d0\",\n        ],\n        borderColor: \"black\",\n        borderWidth: 2,\n      },\n    ],\n  });\n\n  const handleLabelInput = (event) => {\n    const labels = event.target.value.split(\",\").map((label) => label.trim());\n    setUserData((prevData) => ({\n      ...prevData,\n      labels: labels,\n    }));\n  };\n\n  const handleDataInput = (event) => {\n    const data = event.target.value.split(\",\").map((value) => Number(value.trim()));\n    setUserData((prevData) => ({\n      ...prevData,\n      datasets: [\n        {\n          ...prevData.datasets[0],\n          data: data,\n        },\n      ],\n    }));\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <label htmlFor=\"labelInput\">Enter Labels (comma-separated): </label>\n        <input\n          type=\"text\"\n          id=\"labelInput\"\n          placeholder=\"Label1, Label2, Label3, ...\"\n          onChange={handleLabelInput}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"dataInput\">Enter Data Points (comma-separated): </label>\n        <input\n          type=\"text\"\n          id=\"dataInput\"\n          placeholder=\"Value1, Value2, Value3, ...\"\n          onChange={handleDataInput}\n        />\n      </div>\n      <div style={{ width: 700 }}>\n        <BarChart chartData={userData} />\n      </div>\n      <div style={{ width: 700 }}>\n        <LineChart chartData={userData} />\n      </div>\n      <div style={{ width: 700 }}>\n        <PieChart chartData={userData} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}