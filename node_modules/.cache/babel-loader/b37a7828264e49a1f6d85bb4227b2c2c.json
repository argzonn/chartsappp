{"ast":null,"code":"var _jsxFileName = \"/Users/argzon/Desktop/chartjs-react-main/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport BarChart from \"./components/BarChart\";\nimport LineChart from \"./components/LineChart\";\nimport PieChart from \"./components/PieChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [userData, setUserData] = useState({\n    label: \"Users Gained\",\n    labels: [],\n    datasets: [{\n      label: \"Users Gained\",\n      data: [],\n      backgroundColor: [\"rgba(75,192,192,1)\", \"#ecf0f1\", \"#50AF95\", \"#f3ba2f\", \"#2a71d0\"],\n      borderColor: \"black\",\n      borderWidth: 2\n    }]\n  });\n\n  const handleLabelChange = event => {\n    const newLabel = event.target.value;\n    setUserData(prevData => ({ ...prevData,\n      label: newLabel,\n      datasets: [{ ...prevData.datasets[0],\n        label: newLabel\n      }]\n    }));\n  };\n\n  const handleLabelInput = event => {\n    const labels = event.target.value.split(\",\").map(label => label.trim());\n    setUserData(prevData => ({ ...prevData,\n      labels: labels\n    }));\n  };\n\n  const handleDataInput = event => {\n    const data = event.target.value.split(\",\").map(value => Number(value.trim()));\n    setUserData(prevData => ({ ...prevData,\n      datasets: [{ ...prevData.datasets[0],\n        data: data\n      }]\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"labelInput\",\n        children: \"Enter Label: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"labelInput\",\n        placeholder: \"Label Name\",\n        onChange: handleLabelChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"labelDataInput\",\n        children: \"Enter Labels (comma-separated): \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"labelDataInput\",\n        placeholder: \"Label1, Label2, Label3, ...\",\n        onChange: handleLabelInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"dataInput\",\n        children: \"Enter Data Points (comma-separated): \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"dataInput\",\n        placeholder: \"Value1, Value2, Value3, ...\",\n        onChange: handleDataInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 700\n      },\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        chartData: userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 700\n      },\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        chartData: userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 700\n      },\n      children: /*#__PURE__*/_jsxDEV(PieChart, {\n        chartData: userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bPFaapzR8F9hjFQ4eLUkI3voOg0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/argzon/Desktop/chartjs-react-main/src/App.js"],"names":["useState","BarChart","LineChart","PieChart","App","userData","setUserData","label","labels","datasets","data","backgroundColor","borderColor","borderWidth","handleLabelChange","event","newLabel","target","value","prevData","handleLabelInput","split","map","trim","handleDataInput","Number","width"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport BarChart from \"./components/BarChart\";\nimport LineChart from \"./components/LineChart\";\nimport PieChart from \"./components/PieChart\";\n\nfunction App() {\n  const [userData, setUserData] = useState({\n    label: \"Users Gained\",\n    labels: [],\n    datasets: [\n      {\n        label: \"Users Gained\",\n        data: [],\n        backgroundColor: [\n          \"rgba(75,192,192,1)\",\n          \"#ecf0f1\",\n          \"#50AF95\",\n          \"#f3ba2f\",\n          \"#2a71d0\",\n        ],\n        borderColor: \"black\",\n        borderWidth: 2,\n      },\n    ],\n  });\n\n  const handleLabelChange = (event) => {\n    const newLabel = event.target.value;\n    setUserData((prevData) => ({\n      ...prevData,\n      label: newLabel,\n      datasets: [\n        {\n          ...prevData.datasets[0],\n          label: newLabel,\n        },\n      ],\n    }));\n  };\n\n  const handleLabelInput = (event) => {\n    const labels = event.target.value.split(\",\").map((label) => label.trim());\n    setUserData((prevData) => ({\n      ...prevData,\n      labels: labels,\n    }));\n  };\n\n  const handleDataInput = (event) => {\n    const data = event.target.value.split(\",\").map((value) => Number(value.trim()));\n    setUserData((prevData) => ({\n      ...prevData,\n      datasets: [\n        {\n          ...prevData.datasets[0],\n          data: data,\n        },\n      ],\n    }));\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <label htmlFor=\"labelInput\">Enter Label: </label>\n        <input\n          type=\"text\"\n          id=\"labelInput\"\n          placeholder=\"Label Name\"\n          onChange={handleLabelChange}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"labelDataInput\">Enter Labels (comma-separated): </label>\n        <input\n          type=\"text\"\n          id=\"labelDataInput\"\n          placeholder=\"Label1, Label2, Label3, ...\"\n          onChange={handleLabelInput}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"dataInput\">Enter Data Points (comma-separated): </label>\n        <input\n          type=\"text\"\n          id=\"dataInput\"\n          placeholder=\"Value1, Value2, Value3, ...\"\n          onChange={handleDataInput}\n        />\n      </div>\n      <div style={{ width: 700 }}>\n        <BarChart chartData={userData} />\n      </div>\n      <div style={{ width: 700 }}>\n        <LineChart chartData={userData} />\n      </div>\n      <div style={{ width: 700 }}>\n        <PieChart chartData={userData} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}