{"ast":null,"code":"var _jsxFileName = \"/Users/argzon/Downloads/chartjs-react-tutorial-main/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport BarChart from \"./components/BarChart\";\nimport LineChart from \"./components/LineChart\";\nimport PieChart from \"./components/PieChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [userData, setUserData] = useState({\n    labels: [],\n    datasets: [{\n      label: \"Users Gained\",\n      data: [],\n      backgroundColor: [\"rgba(75,192,192,1)\", \"#ecf0f1\", \"#50AF95\", \"#f3ba2f\", \"#2a71d0\"],\n      borderColor: \"black\",\n      borderWidth: 2\n    }]\n  });\n\n  const handleInput = event => {\n    const values = event.target.value.split(\",\").map(value => Number(value.trim())); // Assuming the first half of input is for labels and the second half for data\n\n    const halfway = Math.ceil(values.length / 2);\n    const labels = values.slice(0, halfway);\n    const data = values.slice(halfway);\n    setUserData({\n      labels: labels,\n      datasets: [{\n        label: \"Users Gained\",\n        data: data,\n        backgroundColor: [\"rgba(75,192,192,1)\", \"#ecf0f1\", \"#50AF95\", \"#f3ba2f\", \"#2a71d0\"],\n        borderColor: \"black\",\n        borderWidth: 2\n      }]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter labels and data (comma-separated)\",\n        onChange: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 700\n      },\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        chartData: userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 700\n      },\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        chartData: userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 700\n      },\n      children: /*#__PURE__*/_jsxDEV(PieChart, {\n        chartData: userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gb/BG/4Xi0yK4iQ6rkmnbr3pLV4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/argzon/Downloads/chartjs-react-tutorial-main/src/App.js"],"names":["useState","BarChart","LineChart","PieChart","App","userData","setUserData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","handleInput","event","values","target","value","split","map","Number","trim","halfway","Math","ceil","length","slice","width"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC;AACvCO,IAAAA,MAAM,EAAE,EAD+B;AAEvCC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,cADT;AAEEC,MAAAA,IAAI,EAAE,EAFR;AAGEC,MAAAA,eAAe,EAAE,CACf,oBADe,EAEf,SAFe,EAGf,SAHe,EAIf,SAJe,EAKf,SALe,CAHnB;AAUEC,MAAAA,WAAW,EAAE,OAVf;AAWEC,MAAAA,WAAW,EAAE;AAXf,KADQ;AAF6B,GAAD,CAAxC;;AAmBA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,UAAMC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC,KAAnB,CAAyB,GAAzB,EAA8BC,GAA9B,CAAmCF,KAAD,IAAWG,MAAM,CAACH,KAAK,CAACI,IAAN,EAAD,CAAnD,CAAf,CAD6B,CAG7B;;AACA,UAAMC,OAAO,GAAGC,IAAI,CAACC,IAAL,CAAUT,MAAM,CAACU,MAAP,GAAgB,CAA1B,CAAhB;AACA,UAAMnB,MAAM,GAAGS,MAAM,CAACW,KAAP,CAAa,CAAb,EAAgBJ,OAAhB,CAAf;AACA,UAAMb,IAAI,GAAGM,MAAM,CAACW,KAAP,CAAaJ,OAAb,CAAb;AAEAjB,IAAAA,WAAW,CAAC;AACVC,MAAAA,MAAM,EAAEA,MADE;AAEVC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,cADT;AAEEC,QAAAA,IAAI,EAAEA,IAFR;AAGEC,QAAAA,eAAe,EAAE,CACf,oBADe,EAEf,SAFe,EAGf,SAHe,EAIf,SAJe,EAKf,SALe,CAHnB;AAUEC,QAAAA,WAAW,EAAE,OAVf;AAWEC,QAAAA,WAAW,EAAE;AAXf,OADQ;AAFA,KAAD,CAAX;AAkBD,GA1BD;;AA4BA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,yCAFd;AAGE,QAAA,QAAQ,EAAEC;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,KAAK,EAAE;AAAEc,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAEvB;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF,eAWE;AAAK,MAAA,KAAK,EAAE;AAAEuB,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAEvB;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF,eAcE;AAAK,MAAA,KAAK,EAAE;AAAEuB,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAEvB;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GApEQD,G;;KAAAA,G;AAsET,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport BarChart from \"./components/BarChart\";\nimport LineChart from \"./components/LineChart\";\nimport PieChart from \"./components/PieChart\";\n\nfunction App() {\n  const [userData, setUserData] = useState({\n    labels: [],\n    datasets: [\n      {\n        label: \"Users Gained\",\n        data: [],\n        backgroundColor: [\n          \"rgba(75,192,192,1)\",\n          \"#ecf0f1\",\n          \"#50AF95\",\n          \"#f3ba2f\",\n          \"#2a71d0\",\n        ],\n        borderColor: \"black\",\n        borderWidth: 2,\n      },\n    ],\n  });\n\n  const handleInput = (event) => {\n    const values = event.target.value.split(\",\").map((value) => Number(value.trim()));\n\n    // Assuming the first half of input is for labels and the second half for data\n    const halfway = Math.ceil(values.length / 2);\n    const labels = values.slice(0, halfway);\n    const data = values.slice(halfway);\n\n    setUserData({\n      labels: labels,\n      datasets: [\n        {\n          label: \"Users Gained\",\n          data: data,\n          backgroundColor: [\n            \"rgba(75,192,192,1)\",\n            \"#ecf0f1\",\n            \"#50AF95\",\n            \"#f3ba2f\",\n            \"#2a71d0\",\n          ],\n          borderColor: \"black\",\n          borderWidth: 2,\n        },\n      ],\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter labels and data (comma-separated)\"\n          onChange={handleInput}\n        />\n      </div>\n      <div style={{ width: 700 }}>\n        <BarChart chartData={userData} />\n      </div>\n      <div style={{ width: 700 }}>\n        <LineChart chartData={userData} />\n      </div>\n      <div style={{ width: 700 }}>\n        <PieChart chartData={userData} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}